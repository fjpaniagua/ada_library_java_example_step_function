name: Ada-library-java-example-workflow

on: [push]

env:
  VERSION: 1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build information
        run: echo "Workflow with name ${{ github.workflow }} triggered by the ${{ github.event_name }} done by ${{ github.actor }}"

      - name: Verify
        uses: devecorsoft/verify-version@v1
        with:
          current: $VERSION

      - name: Test custom Action
        uses: fjpaniagua/osiris-conf-verify-gh@v1
        with:
          milliseconds: 1000

#      - name: Compile the project
#        run: |
#          mvn -B compile
#
#      - name: Launch the tests without AT or IT
#        run: |
#          mvn -B test -pl !testAT -pl !testIT
#
#      - name: Install the dependencies
#        run: |
#          mvn -Binstall -Dmaven.test.skip=true -DskipTests -pl !testAT -pl !testIT -Dmaven.wagon.http.retryHandler.count=3

#      - name: Run the tests in parallel
#        run: |
#          parallel --gnu -a tests.parallel || false
#
#      - name: Deploy artifacts to Artifactory
#        run: |
#          mvn antrun:run@attach-shaded-jar deploy -Dskip=true -Dmaven.shade.skip=true -Dmaven.main.skip=true -Djacoco.skip=true -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -DskipTests -Dmaven.install.skip=true -Dspring-boot.repackage.skip=true -Ddocker.skip=truemvn antrun:run@attach-shaded-jar deploy -B ${profilesOpt} -Dskip=true -Dmaven.shade.skip=true -Dmaven.main.skip=true -Djacoco.skip=true -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -DskipTests -Dmaven.install.skip=true -Dspring-boot.repackage.skip=true -Ddocker.skip=true -Dmaven.resources.skip=true -DskipAnnotationProcessing=true -DretryFailedDeploymentCount=2 -pl !testAT

      - name: Deploy Configs to Artifactory
        uses: actions/upload-artifact@v4
        with:
          name: conf-files-in-resources-config
          path: ada_library_java_example_step_function-lib/src/main/resources/config/**/*.conf

      - name: Generate and deploy docker image
        run: |
          docker login docker.pkg.github.com --username "${{ github.actor }}" --password "${{ secrets.GITHUB_TOKEN }}"
          docker build . 
          docker push docker.pkg.github.com/fjpaniagua/ada_library_java_example/ada_library_java_example:0.0.1